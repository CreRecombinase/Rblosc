// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// bloscCompressImpl
Rcpp::RawVector bloscCompressImpl(Rcpp::NumericVector data, int level, std::string filter);
RcppExport SEXP _Rblosc_bloscCompressImpl(SEXP dataSEXP, SEXP levelSEXP, SEXP filterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type level(levelSEXP);
    Rcpp::traits::input_parameter< std::string >::type filter(filterSEXP);
    rcpp_result_gen = Rcpp::wrap(bloscCompressImpl(data, level, filter));
    return rcpp_result_gen;
END_RCPP
}
// bloscDecompressImpl
Rcpp::NumericVector bloscDecompressImpl(Rcpp::RawVector data, int original_size);
RcppExport SEXP _Rblosc_bloscDecompressImpl(SEXP dataSEXP, SEXP original_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::RawVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type original_size(original_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(bloscDecompressImpl(data, original_size));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Rblosc_bloscCompressImpl", (DL_FUNC) &_Rblosc_bloscCompressImpl, 3},
    {"_Rblosc_bloscDecompressImpl", (DL_FUNC) &_Rblosc_bloscDecompressImpl, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rblosc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
